networks:
  homelab_vlan:
    external: true
  homelab:
    external: true

services:
  authentik-postgresql:
    hostname: postgresql
    image: docker.io/library/postgres:16-alpine
    container_name: postgresql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - ${SERVICES_ROOT}/authentik/database/postgres:/var/lib/postgresql/data
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      POSTGRES_PASSWORD: ${PG_PASS}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_DB: ${PG_DB}
    networks:
      - homelab

  authentik-redis:
    hostname: redis
    image: docker.io/library/redis:alpine
    container_name: redis
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
    volumes:
      - ${SERVICES_ROOT}/authentik/database/redis:/data
    networks:
      - homelab

  authentik-server:
    hostname: authentik-server
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2024.12.2}
    container_name: authentik-server
    restart: unless-stopped
    command: server
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
    volumes:
      - ${SERVICES_ROOT}/authentik/media:/media
      - ${SERVICES_ROOT}/authentik/custom-templates:/templates
    ports:
      - 9500:9000
      - 9443:9443
    depends_on:
      authentik-postgresql:
        condition: service_healthy
      authentik-redis:
        condition: service_healthy
    networks:
      - homelab

  authentik-worker:
    hostname: authentik-worker
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2024.12.2}
    container_name: authentik-worker
    restart: unless-stopped
    command: worker
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${SERVICES_ROOT}/authentik/media:/media
      - ${SERVICES_ROOT}/authentik/certs:/certs
      - ${SERVICES_ROOT}/authentik/custom-templates:/templates
    depends_on:
      authentik-postgresql:
        condition: service_healthy
      authentik-redis:
        condition: service_healthy
    networks:
      - homelab
